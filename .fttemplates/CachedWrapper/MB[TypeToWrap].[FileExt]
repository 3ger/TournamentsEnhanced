using System.Collections.Generic;

using TaleWorlds.[PackageName];

using TournamentsEnhanced.Wrappers.Abstract;

namespace TournamentsEnhanced.Wrappers.[PackageName]
{
  public class MB[TypeToWrap] : MBWrapperBase<MB[TypeToWrap], [TypeToWrap]>
  {
    public static implicit operator [TypeToWrap](MB[TypeToWrap] wrapper) => wrapper.UnwrappedObject;
    public static implicit operator MB[TypeToWrap]([TypeToWrap] obj) => MB[TypeToWrap].GetWrapperFor(obj);
  }

  public class MB[TypeToWrap]List : MBListBase<MB[TypeToWrap], MB[TypeToWrap]List>
  {
    public MBListBase(IEnumerable<MB[TypeToWrap]> wrappers) => AddRange(wrappers);
    public MBListBase(MB[TypeToWrap] wrapper) => Add(wrapper);
    public MBListBase() { }

    public static implicit operator List<[TypeToWrap]>(MB[TypeToWrap]List wrapperList) => wrapperList.Unwrap<MB[TypeToWrap], [TypeToWrap]>();
    public static implicit operator MB[TypeToWrap]List(List<[TypeToWrap]> objectList) => (MB[TypeToWrap]List)objectList.Wrap<MB[TypeToWrap], [TypeToWrap]>();
  }
}
